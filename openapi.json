{
  "openapi": "3.0.0",
  "info": {
    "description": "This is the API for the Pin.Storage application.",
    "title": "Pin.Storage API",
    "termsOfService": "https://pin.storage",
    "contact": {
      "name": "API Support",
      "url": "https://docs.pin.storage/feedback"
    },
    "license": {
      "name": "Apache 2.0 Apache-2.0 OR MIT",
      "url": "https://github.com/application-research/estuary/blob/master/LICENSE.md"
    },
    "version": "0.0.0"
  },
  "paths": {
    "/admin/autoretrieve/init": {
      "post": {
        "description": "This endpoint registers a new autoretrieve server",
        "tags": ["autoretrieve"],
        "summary": "Register autoretrieve server",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "addresses": {
                    "description": "Autoretrieve's comma-separated list of addresses",
                    "type": "string"
                  },
                  "pubKey": {
                    "description": "Autoretrieve's public key",
                    "type": "string"
                  }
                },
                "required": ["addresses", "pubKey"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/autoretrieve/list": {
      "get": {
        "description": "This endpoint lists all registered autoretrieve servers",
        "tags": ["autoretrieve"],
        "summary": "List autoretrieve servers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invites": {
      "get": {
        "description": "This endpoint is used to list all estuary invites.",
        "tags": ["content"],
        "summary": "Get Pin.Storage invites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/invites/{code}": {
      "post": {
        "description": "This endpoint is used to create an estuary invite.",
        "tags": ["content"],
        "summary": "Create an Pin.Storage invite",
        "parameters": [
          {
            "description": "Invite code to be created",
            "name": "code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/miners/": {
      "get": {
        "description": "This endpoint returns all miners. Note: value may be cached",
        "tags": ["admin", "net"],
        "summary": "Get all miners",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.minerResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/peering/peers": {
      "get": {
        "description": "This endpoint can be used to list all peers on Peering Service",
        "tags": ["admin"],
        "summary": "List all Peering peers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "This endpoint can be used to add a Peer from the Peering Service",
        "tags": ["admin"],
        "summary": "Add peers on Peering Service",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/peering.PeeringPeer"
                }
              }
            }
          },
          "description": "Peering Peer array",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "This endpoint can be used to remove a Peer from the Peering Service",
        "tags": ["admin"],
        "summary": "Remove peers on Peering Service",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "description": "Peer ids",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/peering/start": {
      "post": {
        "description": "This endpoint can be used to start the Peering Service",
        "tags": ["admin"],
        "summary": "Start Peering",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/peering/status": {
      "get": {
        "description": "This endpoint can be used to check the Peering status",
        "tags": ["admin"],
        "summary": "Check Peering Status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/peering/stop": {
      "post": {
        "description": "This endpoint can be used to stop the Peering Service",
        "tags": ["admin"],
        "summary": "Stop Peering",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/system/config": {
      "get": {
        "description": "This endpoint is used to get system configs.",
        "tags": ["admin"],
        "summary": "Get systems(estuary/shuttle) config",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "description": "This endpoint is used to get all users.",
        "tags": ["admin"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/autoretrieve/heartbeat": {
      "post": {
        "description": "This endpoint updates the lastConnection field for autoretrieve",
        "tags": ["autoretrieve"],
        "summary": "Marks autoretrieve server as up",
        "parameters": [
          {
            "description": "Autoretrieve's auth token",
            "name": "token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/": {
      "get": {
        "description": "This endpoint is used to list all collections. Whenever a user logs on estuary, it will list all collections that the user has access to. This endpoint provides a way to list all collections to the user.",
        "tags": ["collections"],
        "summary": "List all collections",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/collections.Collection"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "This endpoint is used to create a new collection. A collection is a representaion of a group of objects added on the estuary. This endpoint can be used to create a new collection.",
        "tags": ["collections"],
        "summary": "Create a new collection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.createCollectionBody"
              }
            }
          },
          "description": "Collection name and description",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/collections.Collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/fs/add": {
      "post": {
        "description": "This endpoint adds a file to a collection",
        "tags": ["collections"],
        "summary": "Add a file to a collection",
        "parameters": [
          {
            "description": "Collection ID",
            "name": "coluuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Content",
            "name": "content",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Directory inside collection",
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Overwrite file if already exists in path",
            "name": "overwrite",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{coluuid}": {
      "get": {
        "description": "This endpoint is used to get contents in a collection. If no colpath query param is passed",
        "tags": ["collections"],
        "summary": "Get contents in a collection",
        "parameters": [
          {
            "description": "coluuid",
            "name": "coluuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Directory",
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/collections.CollectionListResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "This endpoint adds already-pinned contents (that have ContentIDs) to a collection.",
        "tags": ["collections"],
        "summary": "Add contents to a collection",
        "parameters": [
          {
            "description": "Collection UUID",
            "name": "coluuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Directory",
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Overwrite conflicting files",
            "name": "overwrite",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "description": "Content IDs to add to collection",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "This endpoint is used to delete an existing collection.",
        "tags": ["collections"],
        "summary": "Deletes a collection",
        "parameters": [
          {
            "description": "Collection ID",
            "name": "coluuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{coluuid}/commit": {
      "post": {
        "description": "This endpoint is used to save the contents in a collection, producing a top-level CID that references all the current CIDs in the collection.",
        "tags": ["collections"],
        "summary": "Produce a CID of the collection contents",
        "parameters": [
          {
            "description": "coluuid",
            "name": "coluuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{coluuid}/contents": {
      "delete": {
        "description": "This endpoint is used to delete an existing content from an existing collection. If two or more files with the same contentid exist in the collection, delete the one in the specified path",
        "tags": ["collections"],
        "summary": "Deletes a content from a collection",
        "parameters": [
          {
            "description": "Collection ID",
            "name": "coluuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.deleteContentFromCollectionBody"
              }
            }
          },
          "description": "Variable to use when filtering for files (must be either 'path' or 'content_id')",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/add": {
      "post": {
        "description": "This endpoint is used to upload new content.",
        "tags": ["content"],
        "summary": "Add new content",
        "parameters": [
          {
            "description": "Collection UUID",
            "name": "coluuid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Replication value",
            "name": "replication",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Ignore Dupes true/false",
            "name": "ignore-dupes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Overwrite files with the same path on same collection",
            "name": "overwrite",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Lazy Provide true/false",
            "name": "lazy-provide",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Directory",
            "name": "dir",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "description": "File to upload",
                    "type": "string",
                    "format": "binary"
                  },
                  "filename": {
                    "description": "Filename to use for upload",
                    "type": "string"
                  }
                },
                "required": ["data"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.ContentAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/add-car": {
      "post": {
        "description": "This endpoint is used to add a car object to the network. The object can be a file or a directory.",
        "tags": ["content"],
        "summary": "Add Car object",
        "parameters": [
          {
            "description": "Ignore Dupes",
            "name": "ignore-dupes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filename",
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Car",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.ContentAddResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/add-ipfs": {
      "post": {
        "description": "This endpoint is used to add an IPFS object to the network. The object can be a file or a directory.",
        "tags": ["content"],
        "summary": "Add IPFS object",
        "parameters": [
          {
            "description": "Ignore Dupes",
            "name": "ignore-dupes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Overwrite conflicting files in collections",
            "name": "overwrite",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.IpfsPin"
              }
            }
          },
          "description": "IPFS Body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/aggregated/{content}": {
      "get": {
        "description": "This endpoint returns aggregated content stats",
        "tags": ["content"],
        "summary": "Get aggregated content stats",
        "parameters": [
          {
            "description": "Content ID",
            "name": "content",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/all-deals": {
      "get": {
        "description": "This endpoint is used to get all deals for a user",
        "tags": ["content"],
        "summary": "Get all deals for a user",
        "parameters": [
          {
            "description": "Begin",
            "name": "begin",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Duration",
            "name": "duration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "All",
            "name": "all",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/bw-usage/{content}": {
      "get": {
        "description": "This endpoint returns content bandwidth",
        "tags": ["content"],
        "summary": "Get content bandwidth",
        "parameters": [
          {
            "description": "Content ID",
            "name": "content",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/contents": {
      "get": {
        "description": "This endpoint is used to get user contents",
        "tags": ["content"],
        "summary": "Get user contents",
        "parameters": [
          {
            "description": "limit",
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/create": {
      "post": {
        "description": "This endpoint adds a new content",
        "tags": ["content"],
        "summary": "Add a new content",
        "parameters": [
          {
            "description": "Ignore Dupes",
            "name": "ignore-dupes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/util.ContentCreateBody"
              }
            }
          },
          "description": "Content",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/deals": {
      "get": {
        "description": "This endpoint lists all content with deals",
        "tags": ["content"],
        "summary": "Content with deals",
        "parameters": [
          {
            "description": "Limit",
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Offset",
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/ensure-replication/{datacid}": {
      "get": {
        "description": "This endpoint ensures that the content is replicated to the specified number of providers",
        "tags": ["content"],
        "summary": "Ensure Replication",
        "parameters": [
          {
            "description": "Data CID",
            "name": "datacid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/failures/{content}": {
      "get": {
        "description": "This endpoint returns all failures for a content",
        "tags": ["content"],
        "summary": "List all failures for a content",
        "parameters": [
          {
            "description": "Content ID",
            "name": "content",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/list": {
      "get": {
        "description": "This endpoint lists all content",
        "tags": ["content"],
        "summary": "List all pinned content",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/staging-zones": {
      "get": {
        "description": "This endpoint is used to get staging zone for user, excluding its contents.",
        "tags": ["content"],
        "summary": "Get staging zone for user, excluding its contents",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/staging-zones/{staging_zone}": {
      "get": {
        "description": "This endpoint is used to get a staging zone, excluding its contents.",
        "tags": ["content"],
        "summary": "Get staging zone without its contents field populated",
        "parameters": [
          {
            "description": "Staging Zone Content ID",
            "name": "staging_zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/staging-zones/{staging_zone}/contents": {
      "get": {
        "description": "This endpoint is used to get the contents for a staging zone",
        "tags": ["content"],
        "summary": "Get contents for a staging zone",
        "parameters": [
          {
            "description": "Staging Zone Content ID",
            "name": "staging_zone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "limit",
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/stats": {
      "get": {
        "description": "This endpoint is used to get content statistics. Every content stored in the network (estuary) is tracked by a unique ID which can be used to get information about the content. This endpoint will allow the consumer to get the collected stats of a content",
        "tags": ["content"],
        "summary": "Get content statistics",
        "parameters": [
          {
            "description": "limit",
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "offset",
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/status/{id}": {
      "get": {
        "description": "This endpoint returns the status of a content",
        "tags": ["content"],
        "summary": "Content Status",
        "parameters": [
          {
            "description": "Content ID",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/content/{id}": {
      "get": {
        "description": "This endpoint returns a content by its ID",
        "tags": ["content"],
        "summary": "Content",
        "parameters": [
          {
            "description": "Content ID",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/estimate": {
      "post": {
        "description": "This endpoint estimates the cost of a deal",
        "tags": ["deals"],
        "summary": "Estimate the cost of a deal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.estimateDealBody"
              }
            }
          },
          "description": "The size of the deal in bytes, the replication factor, and the duration of the deal in blocks",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/info/{dealid}": {
      "get": {
        "description": "This endpoint returns the deal info for a deal",
        "tags": ["deals"],
        "summary": "Get Deal Info",
        "parameters": [
          {
            "description": "Deal ID",
            "name": "dealid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/proposal/{propcid}": {
      "get": {
        "description": "This endpoint returns the proposal for a deal",
        "tags": ["deals"],
        "summary": "Get Proposal",
        "parameters": [
          {
            "description": "Proposal CID",
            "name": "propcid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/query/{miner}": {
      "get": {
        "description": "This endpoint returns the ask for a given CID",
        "tags": ["deals"],
        "summary": "Query Ask",
        "parameters": [
          {
            "description": "CID",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/status-by-proposal/{propcid}": {
      "get": {
        "description": "Get Deal Status by PropCid",
        "tags": ["deals"],
        "summary": "Get Deal Status by PropCid",
        "parameters": [
          {
            "description": "PropCid",
            "name": "propcid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/status/{miner}/{propcid}": {
      "get": {
        "description": "This endpoint returns the status of a deal",
        "tags": ["deals"],
        "summary": "Deal Status",
        "parameters": [
          {
            "description": "Miner",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Proposal CID",
            "name": "propcid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/transfer/in-progress": {
      "get": {
        "description": "This endpoint returns the in-progress transfers",
        "tags": ["deals"],
        "summary": "Transfer In Progress",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deal/transfer/status": {
      "post": {
        "description": "This endpoint returns the status of a transfer",
        "tags": ["deals"],
        "summary": "Transfer Status",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.ChannelIDParam"
              }
            }
          },
          "description": "Channel ID",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deals/failures": {
      "get": {
        "description": "This endpoint returns a list of storage failures for user",
        "tags": ["deals"],
        "summary": "Get storage failures for user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deals/make/{miner}": {
      "post": {
        "description": "This endpoint makes a deal for a given content and miner",
        "tags": ["deals"],
        "summary": "Make Deal",
        "parameters": [
          {
            "description": "Miner",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Deal Request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/deals/status/{deal}": {
      "get": {
        "description": "This endpoint returns the status of a deal",
        "tags": ["deals"],
        "summary": "Get Deal Status",
        "parameters": [
          {
            "description": "Deal ID",
            "name": "deal",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/get/{cid}": {
      "get": {
        "description": "This endpoint returns the content associated with a CID",
        "tags": ["public"],
        "summary": "Get Full Content by Cid",
        "parameters": [
          {
            "description": "Cid",
            "name": "cid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "307": {
            "description": "Temporary Redirect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/miner/claim": {
      "post": {
        "description": "This endpoint lets a user claim a miner",
        "tags": ["miner"],
        "summary": "Claim Miner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/miner.ClaimMinerBody"
              }
            }
          },
          "description": "Claim Miner Body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.claimResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/miner/claim/{miner}": {
      "get": {
        "description": "This endpoint lets a user get the message in order to claim a miner",
        "tags": ["miner"],
        "summary": "Get Claim Miner Message",
        "parameters": [
          {
            "description": "Miner claim message",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.claimMsgResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/miner/set-info/{miner}": {
      "put": {
        "description": "This endpoint lets a user set miner info.",
        "tags": ["miner"],
        "summary": "Set Miner Info",
        "parameters": [
          {
            "description": "Miner to set info for",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/miner.MinerSetInfoParams"
              }
            }
          },
          "description": "Miner set info params",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.emptyResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/miner/suspend/{miner}": {
      "post": {
        "description": "This endpoint lets a user suspend a miner.",
        "tags": ["miner"],
        "summary": "Suspend Miner",
        "parameters": [
          {
            "description": "Miner to suspend",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/miner.SuspendMinerBody"
              }
            }
          },
          "description": "Suspend Miner Body",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.emptyResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/miner/unsuspend/{miner}": {
      "put": {
        "description": "This endpoint lets a user unsuspend a miner.",
        "tags": ["miner"],
        "summary": "Unuspend Miner",
        "parameters": [
          {
            "description": "Miner to unsuspend",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.emptyResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/pinning/pins": {
      "get": {
        "description": "This endpoint lists all pin status objects",
        "tags": ["pinning"],
        "summary": "List all pin status objects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.IpfsListPinStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "This endpoint adds a pin to the IPFS daemon.",
        "tags": ["pinning"],
        "summary": "Add and pin object",
        "parameters": [
          {
            "description": "Ignore Dupes",
            "name": "ignore-dupes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Overwrite conflicting files in collections",
            "name": "overwrite",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.IpfsPin"
              }
            }
          },
          "description": "Pin Body {cid:cid, name:name}",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.IpfsPinStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/pinning/pins/{pinid}": {
      "get": {
        "description": "This endpoint returns a pin status object.",
        "tags": ["pinning"],
        "summary": "Get a pin status object",
        "parameters": [
          {
            "description": "cid",
            "name": "pinid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.IpfsPinStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "This endpoint replaces a pinned object.",
        "tags": ["pinning"],
        "summary": "Replace a pinned object",
        "parameters": [
          {
            "description": "Pin ID to be replaced",
            "name": "pinid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.IpfsPin"
              }
            }
          },
          "description": "New pin",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.IpfsPinStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "This endpoint deletes a pinned object.",
        "tags": ["pinning"],
        "summary": "Delete a pinned object",
        "parameters": [
          {
            "description": "Pin ID",
            "name": "pinid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/by-cid/{cid}": {
      "get": {
        "description": "This endpoint returns the content record associated with a CID",
        "tags": ["public"],
        "summary": "Get Content by Cid",
        "parameters": [
          {
            "description": "Cid",
            "name": "cid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/deals/failures": {
      "get": {
        "description": "This endpoint returns a list of storage failures",
        "tags": ["deals"],
        "summary": "Get storage failures",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/info": {
      "get": {
        "description": "This endpoint returns information about the node",
        "tags": ["public"],
        "summary": "Get public node info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.publicNodeInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/metrics/deals-on-chain": {
      "get": {
        "description": "This endpoint is used to get deal metrics",
        "tags": ["public", "metrics"],
        "summary": "Get deal metrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/miners/deals/{miner}": {
      "get": {
        "description": "This endpoint returns all miners deals",
        "tags": ["public", "miner"],
        "summary": "Get all miners deals",
        "parameters": [
          {
            "description": "Filter by miner",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Ignore Failed",
            "name": "ignore-failed",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/miners/failures/{miner}": {
      "get": {
        "description": "This endpoint returns all miners",
        "tags": ["public", "net"],
        "summary": "Get all miners",
        "parameters": [
          {
            "description": "Filter by miner",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/miners/stats/{miner}": {
      "get": {
        "description": "This endpoint returns miner stats",
        "tags": ["public", "miner"],
        "summary": "Get miner stats",
        "parameters": [
          {
            "description": "Filter by miner",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/miners/storage/query/{miner}": {
      "get": {
        "description": "This endpoint returns the ask for a given CID",
        "tags": ["deals"],
        "summary": "Query Ask",
        "parameters": [
          {
            "description": "CID",
            "name": "miner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/net/addrs": {
      "get": {
        "description": "This endpoint is used to get net addrs",
        "tags": ["public", "net"],
        "summary": "Net Addrs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/net/peers": {
      "get": {
        "description": "This endpoint is used to get net peers",
        "tags": ["public", "net"],
        "summary": "Net Peers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/public/stats": {
      "get": {
        "description": "This endpoint is used to get public stats.",
        "tags": ["public"],
        "summary": "Public stats",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/user/api-keys": {
      "get": {
        "description": "This endpoint is used to get API keys for a user. In estuary, each user can be given multiple API keys (tokens). This endpoint can be used to retrieve all available API keys for a given user.",
        "tags": ["User"],
        "summary": "Get API keys for a user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/api.getApiKeysResp"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "This endpoint is used to create API keys for a user. In estuary, each user is given an API key to access all features.",
        "tags": ["User"],
        "summary": "Create API keys for a user",
        "parameters": [
          {
            "description": "Expiration - Expiration - Valid time units are ns, us (or µs),  ms,  s,  m,  h.  for  example  300h",
            "name": "expiry",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Permissions -- currently unused",
            "name": "perms",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.getApiKeysResp"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/user/api-keys/{key_or_hash}": {
      "delete": {
        "description": "This endpoint is used to revoke a user API key. In estuary, every user is assigned with an API key, this API key is generated and issued for each user and is primarily used to access all estuary features. This endpoint can be used to revoke the API key that's assigned to the user. Revoked API keys are completely deleted and are not recoverable.",
        "tags": ["User"],
        "summary": "Revoke a User API Key.",
        "parameters": [
          {
            "description": "Key or Hash",
            "name": "key_or_hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/user/export": {
      "get": {
        "description": "This endpoint is used to get API keys for a user.",
        "tags": ["User"],
        "summary": "Export user data",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/user/stats": {
      "get": {
        "description": "This endpoint is used to get stats for the current user.",
        "tags": ["User"],
        "summary": "Get stats for the current user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    },
    "/viewer": {
      "get": {
        "description": "This endpoint fetches viewer details such as username, permissions, address, owned miners, user settings etc.",
        "summary": "Fetch viewer details",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.ViewerResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/util.HttpError"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "//api.estuary.tech"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "address.Address": {
        "type": "object"
      },
      "api.ChannelIDParam": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "initiator": {
            "type": "string"
          },
          "responder": {
            "type": "string"
          }
        }
      },
      "api.claimMsgResponse": {
        "type": "object",
        "properties": {
          "hexmsg": {
            "type": "string"
          }
        }
      },
      "api.claimResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "api.createCollectionBody": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "api.deleteContentFromCollectionBody": {
        "type": "object",
        "properties": {
          "by": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "api.emptyResp": {
        "type": "object"
      },
      "api.estimateDealBody": {
        "type": "object",
        "properties": {
          "durationBlks": {
            "type": "integer"
          },
          "replication": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "api.getApiKeysResp": {
        "type": "object",
        "properties": {
          "expiry": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "tokenHash": {
            "type": "string"
          }
        }
      },
      "api.minerResp": {
        "type": "object",
        "properties": {
          "addr": {
            "$ref": "#/components/schemas/address.Address"
          },
          "chain_info": {
            "$ref": "#/components/schemas/miner.MinerChainInfo"
          },
          "name": {
            "type": "string"
          },
          "suspended": {
            "type": "boolean"
          },
          "suspendedReason": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "api.publicNodeInfo": {
        "type": "object",
        "properties": {
          "primaryAddress": {
            "$ref": "#/components/schemas/address.Address"
          }
        }
      },
      "cid.Cid": {
        "type": "object"
      },
      "collections.CidType": {
        "type": "string",
        "enum": ["directory", "file"],
        "x-enum-varnames": ["CidTypeDir", "CidTypeFile"]
      },
      "collections.Collection": {
        "type": "object",
        "properties": {
          "cid": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "userId": {
            "type": "integer"
          },
          "uuid": {
            "type": "string"
          }
        }
      },
      "collections.CollectionListResponse": {
        "type": "object",
        "properties": {
          "cid": {
            "$ref": "#/components/schemas/util.DbCID"
          },
          "coluuid": {
            "type": "string"
          },
          "contId": {
            "type": "integer"
          },
          "dir": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/collections.CidType"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "miner.ClaimMinerBody": {
        "type": "object",
        "properties": {
          "claim": {
            "type": "string"
          },
          "miner": {
            "$ref": "#/components/schemas/address.Address"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "miner.MinerChainInfo": {
        "type": "object",
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "owner": {
            "type": "string"
          },
          "peerId": {
            "type": "string"
          },
          "worker": {
            "type": "string"
          }
        }
      },
      "miner.MinerSetInfoParams": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "miner.SuspendMinerBody": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "peering.PeeringPeer": {
        "type": "object",
        "properties": {
          "Addrs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Connected": {
            "type": "boolean"
          },
          "ID": {
            "type": "string"
          }
        }
      },
      "types.IpfsListPinStatusResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/types.IpfsPinStatusResponse"
            }
          }
        }
      },
      "types.IpfsPin": {
        "type": "object",
        "properties": {
          "cid": {
            "type": "string"
          },
          "meta": {
            "type": "object",
            "additionalProperties": true
          },
          "name": {
            "type": "string"
          },
          "origins": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "types.IpfsPinStatusResponse": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string"
          },
          "delegates": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "info": {
            "type": "object",
            "additionalProperties": true
          },
          "pin": {
            "$ref": "#/components/schemas/types.IpfsPin"
          },
          "requestid": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/types.PinningStatus"
          }
        }
      },
      "types.PinningStatus": {
        "type": "string",
        "enum": ["pinning", "pinned", "failed", "queued", "offloaded"],
        "x-enum-varnames": [
          "PinningStatusPinning",
          "PinningStatusPinned",
          "PinningStatusFailed",
          "PinningStatusQueued",
          "PinningStatusOffloaded"
        ]
      },
      "util.ContentAddResponse": {
        "type": "object",
        "properties": {
          "cid": {
            "type": "string"
          },
          "estuaryId": {
            "type": "integer"
          },
          "estuary_retrieval_url": {
            "type": "string"
          },
          "providers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "retrieval_url": {
            "type": "string"
          }
        }
      },
      "util.ContentCreateBody": {
        "type": "object",
        "properties": {
          "coluuid": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "overwrite": {
            "type": "boolean"
          },
          "root": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/util.ContentType"
          }
        }
      },
      "util.ContentType": {
        "type": "integer",
        "enum": [0, 1, 2],
        "x-enum-varnames": ["Unknown", "File", "Directory"]
      },
      "util.DbCID": {
        "type": "object",
        "properties": {
          "cid": {
            "$ref": "#/components/schemas/cid.Cid"
          }
        }
      },
      "util.HttpError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "details": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "util.UserSettings": {
        "type": "object",
        "properties": {
          "contentAddingDisabled": {
            "type": "boolean"
          },
          "dealDuration": {
            "type": "integer"
          },
          "dealMakingDisabled": {
            "type": "boolean"
          },
          "fileStagingThreshold": {
            "type": "integer"
          },
          "flags": {
            "type": "integer"
          },
          "replication": {
            "type": "integer"
          },
          "uploadEndpoints": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verified": {
            "type": "boolean"
          }
        }
      },
      "util.ViewerResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "auth_expiry": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "miners": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "perms": {
            "type": "integer"
          },
          "settings": {
            "$ref": "#/components/schemas/util.UserSettings"
          },
          "username": {
            "type": "string"
          }
        }
      }
    }
  }
}
